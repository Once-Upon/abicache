[
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "address",
                "name": "sender",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "address",
                "name": "tokenIn",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "address",
                "name": "tokenOut",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "tokenInAmount",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "tokenOutAmount",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "timeStamp",
                "type": "uint256"
            }
        ],
        "name": "BeeSwap",
        "type": "event"
    },
    {
        "stateMutability": "payable",
        "type": "fallback"
    },
    {
        "inputs": [
            {
                "internalType": "address[]",
                "name": "tokenInOut",
                "type": "address[]"
            },
            {
                "internalType": "uint256[]",
                "name": "dexRoute",
                "type": "uint256[]"
            },
            {
                "internalType": "uint256[]",
                "name": "amountInOut",
                "type": "uint256[]"
            },
            {
                "internalType": "int256[]",
                "name": "options",
                "type": "int256[]"
            },
            {
                "internalType": "address[]",
                "name": "path",
                "type": "address[]"
            },
            {
                "components": [
                    {
                        "internalType": "bytes32",
                        "name": "poolId",
                        "type": "bytes32"
                    },
                    {
                        "internalType": "enum Ibal.SwapKind",
                        "name": "kind",
                        "type": "uint8"
                    },
                    {
                        "internalType": "contract IAsset",
                        "name": "assetIn",
                        "type": "address"
                    },
                    {
                        "internalType": "contract IAsset",
                        "name": "assetOut",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bytes",
                        "name": "userData",
                        "type": "bytes"
                    }
                ],
                "internalType": "struct Ibal.SingleSwap",
                "name": "singleswap",
                "type": "tuple"
            },
            {
                "internalType": "uint256",
                "name": "limit",
                "type": "uint256"
            },
            {
                "components": [
                    {
                        "internalType": "bytes32",
                        "name": "poolId",
                        "type": "bytes32"
                    },
                    {
                        "internalType": "uint256",
                        "name": "assetInIndex",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "assetOutIndex",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bytes",
                        "name": "userData",
                        "type": "bytes"
                    }
                ],
                "internalType": "struct Ibal.BatchSwapStep[]",
                "name": "swaps",
                "type": "tuple[]"
            },
            {
                "internalType": "contract IAsset[]",
                "name": "assets",
                "type": "address[]"
            },
            {
                "internalType": "enum Ibal.SwapKind",
                "name": "kind",
                "type": "uint8"
            },
            {
                "internalType": "int256[]",
                "name": "limits",
                "type": "int256[]"
            },
            {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
            }
        ],
        "name": "swapAggregatedRoute",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "amountIn0",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "amountOut1",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
            },
            {
                "internalType": "address[]",
                "name": "path",
                "type": "address[]"
            },
            {
                "internalType": "uint8",
                "name": "option",
                "type": "uint8"
            }
        ],
        "name": "swapV2Router",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    }
]