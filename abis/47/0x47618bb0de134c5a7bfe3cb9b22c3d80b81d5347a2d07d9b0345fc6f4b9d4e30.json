[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_bentoBox",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "contract ISafeStrategy",
                "name": "strategy",
                "type": "address"
            }
        ],
        "name": "_rebalanceNecessairy",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "bentoBox",
        "outputs": [
            {
                "internalType": "contract IBentoBoxMinimal",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "contract ISafeStrategy",
                        "name": "strategy",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxChangeAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "swapToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "minOutAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "harvestReward",
                        "type": "bool"
                    }
                ],
                "internalType": "struct CombineHarvester.ExecuteData[]",
                "name": "datas",
                "type": "tuple[]"
            }
        ],
        "name": "executeSafeHarvests",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "contract ISafeStrategy",
                        "name": "strategy",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxBalance",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxChangeAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "swapToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "minOutAmount",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "rebalance",
                        "type": "bool"
                    },
                    {
                        "internalType": "bool",
                        "name": "harvestReward",
                        "type": "bool"
                    }
                ],
                "internalType": "struct CombineHarvester.ExecuteDataManual[]",
                "name": "datas",
                "type": "tuple[]"
            }
        ],
        "name": "executeSafeHarvestsManual",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]