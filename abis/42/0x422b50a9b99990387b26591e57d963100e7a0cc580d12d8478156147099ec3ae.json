[
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "bytes11",
                        "name": "name",
                        "type": "bytes11"
                    },
                    {
                        "internalType": "enum IRegistry.IntegrationType",
                        "name": "integrationType",
                        "type": "IRegistry.IntegrationType"
                    },
                    {
                        "internalType": "address",
                        "name": "integration",
                        "type": "address"
                    }
                ],
                "internalType": "struct IRegistry.Integration[]",
                "name": "s",
                "type": "tuple[]"
            },
            {
                "internalType": "address",
                "name": "integration",
                "type": "address"
            }
        ],
        "name": "findIntegration",
        "outputs": [
            {
                "internalType": "bool",
                "name": "exist",
                "type": "bool"
            },
            {
                "internalType": "uint8",
                "name": "index",
                "type": "uint8"
            },
            {
                "components": [
                    {
                        "internalType": "bytes11",
                        "name": "name",
                        "type": "bytes11"
                    },
                    {
                        "internalType": "enum IRegistry.IntegrationType",
                        "name": "integrationType",
                        "type": "IRegistry.IntegrationType"
                    },
                    {
                        "internalType": "address",
                        "name": "integration",
                        "type": "address"
                    }
                ],
                "internalType": "struct IRegistry.Integration",
                "name": "ypltfm",
                "type": "tuple"
            }
        ],
        "stateMutability": "pure",
        "type": "function"
    }
]