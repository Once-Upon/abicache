[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "baseFactory",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_covenContract",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "string",
                "name": "baseUri",
                "type": "string"
            },
            {
                "indexed": false,
                "internalType": "bytes32",
                "name": "provenanceHash",
                "type": "bytes32"
            }
        ],
        "name": "BaseUriUpdated",
        "type": "event"
    },
    {
        "stateMutability": "nonpayable",
        "type": "fallback"
    },
    {
        "inputs": [],
        "name": "COMPANION_COST",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
            }
        ],
        "name": "burn",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "implementation",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "witchId",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "main",
                        "type": "bool"
                    },
                    {
                        "internalType": "bool",
                        "name": "companion",
                        "type": "bool"
                    },
                    {
                        "internalType": "address",
                        "name": "sendTo",
                        "type": "address"
                    }
                ],
                "internalType": "struct WitchHearts.MintInfo[]",
                "name": "mintInfo",
                "type": "tuple[]"
            }
        ],
        "name": "mintWithWitches",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "saleEnabled",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "baseUri",
                "type": "string"
            },
            {
                "internalType": "bytes32",
                "name": "provenanceHash",
                "type": "bytes32"
            }
        ],
        "name": "setBaseURI",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bool",
                "name": "_saleEnabled",
                "type": "bool"
            }
        ],
        "name": "setSaleEnabled",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "stateMutability": "payable",
        "type": "receive"
    }
]