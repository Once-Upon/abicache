[
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "spender",
                "type": "address"
            }
        ],
        "name": "approveKoboldMultiplierSpender",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "koboldMultiplierId",
                "type": "uint256"
            }
        ],
        "name": "getKoboldMultiplier",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "multiplier",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "isAvailableForPurchase",
                        "type": "bool"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxQuantity",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "quantitySold",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "internalType": "struct KoboldStakingMultiplier",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "user",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "koboldMultiplerId",
                "type": "uint256"
            }
        ],
        "name": "getKoboldMultiplierUserBalance",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "koboldMultiplierId",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "quantity",
                "type": "uint256"
            }
        ],
        "name": "purchaseKoboldMultiplier",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256[]",
                "name": "koboldMultiplierIds",
                "type": "uint256[]"
            }
        ],
        "name": "queryBatchKoboldMultipliers",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "multiplier",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "isAvailableForPurchase",
                        "type": "bool"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxQuantity",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "quantitySold",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "internalType": "struct KoboldStakingMultiplier[]",
                "name": "",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            },
            {
                "internalType": "uint256[]",
                "name": "koboldMultiplierIds",
                "type": "uint256[]"
            }
        ],
        "name": "queryUserBalanceBatchMultipliers",
        "outputs": [
            {
                "internalType": "uint256[]",
                "name": "",
                "type": "uint256[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "multiplier",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "isAvailableForPurchase",
                        "type": "bool"
                    },
                    {
                        "internalType": "uint256",
                        "name": "maxQuantity",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "quantitySold",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "internalType": "struct KoboldStakingMultiplier",
                "name": "koboldStakingMultiplier",
                "type": "tuple"
            }
        ],
        "name": "setKoboldMultiplier",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "spender",
                "type": "address"
            }
        ],
        "name": "unapproveKoboldMultiplierSpender",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]