[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_blacklistControl",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "MirrorSites__BannedUser",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "MirrorSites__Paused",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_mirrorSiteId",
                "type": "uint256"
            },
            {
                "internalType": "bool",
                "name": "_optionAccepted",
                "type": "bool"
            }
        ],
        "name": "acceptMirrorSiteApplication",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_website",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "_reffererAddress",
                "type": "address"
            },
            {
                "internalType": "enum MirrorSites.MirrorType",
                "name": "_mirrorType",
                "type": "uint8"
            },
            {
                "internalType": "string",
                "name": "chain",
                "type": "string"
            }
        ],
        "name": "applyRegisterMirrorSite",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "blacklistControl",
        "outputs": [
            {
                "internalType": "contract IBlacklistControl",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getAllMirrorSites",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "index",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "websiteUrl",
                        "type": "string"
                    },
                    {
                        "internalType": "address",
                        "name": "websiteOwnerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "referrerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "acceptedByRootOwner",
                        "type": "bool"
                    },
                    {
                        "internalType": "enum MirrorSites.MirrorType",
                        "name": "mirrorType",
                        "type": "uint8"
                    },
                    {
                        "internalType": "string",
                        "name": "chain",
                        "type": "string"
                    },
                    {
                        "internalType": "bool",
                        "name": "reported",
                        "type": "bool"
                    }
                ],
                "internalType": "struct MirrorSites.MirrorSiteBundle[]",
                "name": "",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_mirrorSiteId",
                "type": "uint256"
            }
        ],
        "name": "getMirrorSiteInfo",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "index",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "websiteUrl",
                        "type": "string"
                    },
                    {
                        "internalType": "address",
                        "name": "websiteOwnerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "referrerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "acceptedByRootOwner",
                        "type": "bool"
                    },
                    {
                        "internalType": "enum MirrorSites.MirrorType",
                        "name": "mirrorType",
                        "type": "uint8"
                    },
                    {
                        "internalType": "string",
                        "name": "chain",
                        "type": "string"
                    },
                    {
                        "internalType": "bool",
                        "name": "reported",
                        "type": "bool"
                    }
                ],
                "internalType": "struct MirrorSites.MirrorSiteBundle",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
            }
        ],
        "name": "getMirrorSitesByOwner",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "uint256",
                        "name": "index",
                        "type": "uint256"
                    },
                    {
                        "internalType": "string",
                        "name": "websiteUrl",
                        "type": "string"
                    },
                    {
                        "internalType": "address",
                        "name": "websiteOwnerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "referrerAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "acceptedByRootOwner",
                        "type": "bool"
                    },
                    {
                        "internalType": "enum MirrorSites.MirrorType",
                        "name": "mirrorType",
                        "type": "uint8"
                    },
                    {
                        "internalType": "string",
                        "name": "chain",
                        "type": "string"
                    },
                    {
                        "internalType": "bool",
                        "name": "reported",
                        "type": "bool"
                    }
                ],
                "internalType": "struct MirrorSites.MirrorSiteBundle[]",
                "name": "",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "mirrorSiteCounter",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "mirrorSitesMapping",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
            },
            {
                "internalType": "string",
                "name": "websiteUrl",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "websiteOwnerAddress",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "referrerAddress",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "acceptedByRootOwner",
                "type": "bool"
            },
            {
                "internalType": "enum MirrorSites.MirrorType",
                "name": "mirrorType",
                "type": "uint8"
            },
            {
                "internalType": "string",
                "name": "chain",
                "type": "string"
            },
            {
                "internalType": "bool",
                "name": "reported",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "pausedContract",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_mirrorSiteId",
                "type": "uint256"
            }
        ],
        "name": "reportScamMirrorSite",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bool",
                "name": "_option",
                "type": "bool"
            }
        ],
        "name": "togglePauseContract",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_blacklistControl",
                "type": "address"
            }
        ],
        "name": "updateBlackListAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]