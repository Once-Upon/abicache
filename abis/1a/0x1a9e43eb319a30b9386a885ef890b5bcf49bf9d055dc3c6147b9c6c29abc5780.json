[
    {
        "inputs": [],
        "name": "BadPermitLength",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "DirectEthDepositIsForbidden",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "EmptySwap",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "EthValueAmountMismatch",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "MinReturnError",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "NotEnoughApprovedFundsForSwap",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "PermitNotAllowedForEthSwap",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "TransactionExpired",
        "type": "error"
    },
    {
        "inputs": [
            {
                "internalType": "contract ISwapExecutor",
                "name": "executor",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            },
            {
                "internalType": "contract IERC20",
                "name": "targetToken",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "minReturn",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
            },
            {
                "components": [
                    {
                        "internalType": "contract IERC20",
                        "name": "sourceToken",
                        "type": "address"
                    },
                    {
                        "components": [
                            {
                                "internalType": "uint256",
                                "name": "tokenRatio",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "data",
                                "type": "bytes"
                            }
                        ],
                        "internalType": "struct ISwapExecutor.TargetSwapDescription[]",
                        "name": "swaps",
                        "type": "tuple[]"
                    }
                ],
                "internalType": "struct ISwapExecutor.SwapDescription[]",
                "name": "swapDescriptions",
                "type": "tuple[]"
            },
            {
                "internalType": "bytes",
                "name": "permit",
                "type": "bytes"
            }
        ],
        "name": "swap",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "stateMutability": "payable",
        "type": "receive"
    }
]