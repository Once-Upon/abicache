[
    {
        "inputs": [
            {
                "internalType": "contract ServiceRegistry",
                "name": "_serviceRegistry",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "activeTriggers",
        "outputs": [
            {
                "internalType": "bytes32",
                "name": "triggerHash",
                "type": "bytes32"
            },
            {
                "internalType": "address",
                "name": "commandAddress",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "continuous",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "bytes32",
                        "name": "triggerHash",
                        "type": "bytes32"
                    },
                    {
                        "internalType": "address",
                        "name": "commandAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "continuous",
                        "type": "bool"
                    }
                ],
                "internalType": "struct AutomationBotStorage.TriggerRecord",
                "name": "record",
                "type": "tuple"
            }
        ],
        "name": "appendTriggerRecord",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "counter",
        "outputs": [
            {
                "internalType": "uint64",
                "name": "triggersCounter",
                "type": "uint64"
            },
            {
                "internalType": "uint64",
                "name": "triggersGroupCounter",
                "type": "uint64"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "triggerData",
                "type": "bytes"
            },
            {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "adapter",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "coverageToken",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "coverageAmount",
                "type": "uint256"
            }
        ],
        "name": "executeCoverage",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "triggerData",
                "type": "bytes"
            },
            {
                "internalType": "address",
                "name": "target",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "adapter",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "allowance",
                "type": "bool"
            }
        ],
        "name": "executePermit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "increaseGroupCounter",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "serviceRegistry",
        "outputs": [
            {
                "internalType": "contract ServiceRegistry",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "triggersCounter",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "triggersGroupCounter",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
            },
            {
                "components": [
                    {
                        "internalType": "bytes32",
                        "name": "triggerHash",
                        "type": "bytes32"
                    },
                    {
                        "internalType": "address",
                        "name": "commandAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "continuous",
                        "type": "bool"
                    }
                ],
                "internalType": "struct AutomationBotStorage.TriggerRecord",
                "name": "record",
                "type": "tuple"
            }
        ],
        "name": "updateTriggerRecord",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]